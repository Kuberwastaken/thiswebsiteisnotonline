const { supabase } = require('../lib/supabase.js');

module.exports = async function handler(req, res) {
  try {
    // Get all website paths from database
    const { data: websites, error } = await supabase
      .from('websites')
      .select('path')
      .order('created_at', { ascending: false });
    
    if (error) {
      console.error('Error fetching websites for robots.txt:', error);
    }
    
    // Generate robots.txt content
    let robotsContent = `User-agent: *
Allow: /

# Generated website pages
`;

    // Add all generated pages (sample of recent ones to keep robots.txt manageable)
    if (websites && websites.length > 0) {
      const recentWebsites = websites.slice(0, 1000); // Limit to 1000 most recent
      recentWebsites.forEach(site => {
        robotsContent += `Allow: /${site.path}\n`;
      });
    }

    robotsContent += `
# Block admin and utility endpoints
Disallow: /api/
Disallow: /admin/
Disallow: /_next/
Disallow: /health

# Special pages
Allow: /stats
Allow: /sitemap.xml

# Sitemap
Sitemap: https://thiswebsiteisnot.online/sitemap.xml

# Generated by ThisWebsiteIsNot.Online
# Created by Kuber Mehta - https://kuber.studio
# Total generated websites: ${websites ? websites.length : 0}
`;

    res.setHeader('Content-Type', 'text/plain');
    res.setHeader('Cache-Control', 'public, max-age=3600'); // Cache for 1 hour
    res.send(robotsContent);
    
  } catch (error) {
    console.error('Error generating robots.txt:', error);
    
    // Fallback robots.txt
    const fallbackRobots = `User-agent: *
Allow: /

Disallow: /api/
Disallow: /admin/
Disallow: /_next/

Sitemap: https://thiswebsiteisnot.online/sitemap.xml
`;
    
    res.setHeader('Content-Type', 'text/plain');
    res.send(fallbackRobots);
  }
}
